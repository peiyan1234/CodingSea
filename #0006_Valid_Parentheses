/*
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true
*/

class Solution {
public:
    bool isValid(string s) {
        stack<char> P;
        short x = 0;
        while (x < s.size())
        {
            if (P.empty())
            {
                P.push(s[x]);
                ++x;
                continue;
            }
            switch (s[x])
            {
                case ')':
                    switch (P.top())
                    {
                        case '(':
                            P.pop();
                            break;
                        default:
                            P.push(s[x]);
                    }
                    break;
                case ']':
                    switch (P.top())
                    {
                        case '[':
                            P.pop();
                            break;
                        default:
                            P.push(s[x]);
                    }
                    break;
                case '}':
                    switch (P.top())
                    {
                        case '{':
                            P.pop();
                            break;
                        default:
                            P.push(s[x]);
                    }
                    break;
                case '(':
                    P.push(s[x]);
                    break;
                case '[':
                    P.push(s[x]);
                    break;
                case '{':
                    P.push(s[x]);
                    break;
                
            }
            
            ++x;
        }
        if (P.empty())
            return true;
        
        return false;
    }
};

/*
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Valid Parentheses.
Memory Usage: 6.3 MB, less than 62.68% of C++ online submissions for Valid Parentheses.
*/
